#!/usr/bin/python
#
# build ncurses
#

import os

Import('env')

home = os.environ['HOME']
cc = env['CC']
downloads = env['DOWNLOADS']
target = env['TARG']

if target == 'mvp':
  cross = '-c ' + env['CROSS']
else:
  cross = ''

file = downloads + '/ncurses-5.5.tar.gz'

e = Environment()
e.Tool('WGet', toolpath=['../../../scons'])

def GetSourceFile(url, output_dir, env):
  '''
  Create a node for a file retrieved via wget.
  This node can be used as a dependency in other rules.
  '''
  # Nab everything after the last slash as the filename
  basefilename = str(url)[str( url).rfind(os.sep) + 1:]
  munged = output_dir + os.sep + basefilename + os.sep + url
  node = env.SourceCode( munged, env.WGet() )
  return node

#url = 'http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.5.tar.gz'
url = 'http://www.mvpmc.org/dl/ncurses-5.5.tar.gz'
pwd = os.getcwd()

build = env.Command('../../install/' + target + '/lib/libncurses.a', 0,
                    'scons/build_lib.sh -d ' + pwd + '/' + target +
                    '/ncurses-5.5 -i ' + file + ' ' +
                    cross + ' ' +
                    '-C --host=powerpc-linux ' +
                    '-I ' + pwd + '/../../install/' + target + ' ')

if not os.path.exists(file):
	dl = GetSourceFile(url, '#' + downloads, e)
	env.Depends(build, dl)

env.SideEffect(['../../install/' + target + '/include/ncurses.h'],
                build)

Return('build')
