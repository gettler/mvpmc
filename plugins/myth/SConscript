#!/usr/bin/python
#
# MythTV plugin
#

import os

Import ('env')

dir = env['BUILD_DIR']
target = env['TARG']
libdir = env['INSTLIBDIR']
ldflags = env['LDFLAGS']
linkmode = env['LINKMODE']
bindir = env['INSTBINDIR']
pwd = os.getcwd()

src = [ 'connection.c', 'myth.c', 'recordings.c' ]

cmlib = libdir + '/libcmyth.a'
cmlibso = libdir + '/libcmyth.so'

plugin = pwd + '/libmvpmc_myth.plugin.a'

dummy = env.Command('dummy.a', 0,
		    'scons/build_plugin.sh -t ' + plugin + ' -a ' + cmlib)
env.Depends(dummy, cmlib)

static = env.StaticLibrary('mvpmc_myth.plugin.a', [ src ],
                           CPPPATH = [env['INCDIR'], env['INSTINCDIR']],
                           LINKFLAGS = ldflags + ' ' + cmlib)

if linkmode == 'dynamic':
    shared = env.SharedLibrary('mvpmc_myth.plugin', [ src ],
                               CPPPATH = [env['INCDIR'], env['INSTINCDIR']],
                               LINKFLAGS = ldflags + ' ' + cmlibso)
    inst = env.Install(libdir, [ static, shared ])
    env.Depends(shared, cmlibso)
else:
    inst = env.Install(libdir, [ static ])

env.Depends(inst, dummy)

Return('inst')
