#!/usr/bin/python
#
# screensaver plugin
#

import os

Import ('env')

dir = env['BUILD_DIR']
target = env['TARG']
libdir = env['INSTLIBDIR']
ldflags = env['LDFLAGS']
linkmode = env['LINKMODE']
bindir = env['INSTBINDIR']
pwd = os.getcwd()

env.Append(CCFLAGS = ' -Iplugins/osd')

if linkmode == 'dynamic':
	env.Append(CCFLAGS = ' -DPLUGIN_SUPPORT')
	
src = [ 'ss.c' ]

osdlib = libdir + '/libosd.a'
osdlibso = libdir + '/libosd.so'

plugin = pwd + '/libmvpmc_screensaver.plugin.a'

dummy = env.Command('dummy.a', 0,
		    'scons/build_plugin.sh -t ' + plugin + ' -a ' + osdlib)
env.Depends(dummy, osdlib)

static = env.StaticLibrary('mvpmc_screensaver.plugin.a', [ src, osdlib ],
                           CPPPATH = [env['INCDIR'], env['INSTINCDIR']],
                           LINKFLAGS = ldflags + ' ' + osdlib)

if linkmode == 'dynamic':
    shared = env.SharedLibrary('mvpmc_screensaver.plugin', [ src ],
                               CPPPATH = [env['INCDIR'], env['INSTINCDIR']],
                               LINKFLAGS = ldflags + ' ' + osdlibso)
    env.Depends(shared, osdlibso)
    inst = env.Install(libdir, [ static, shared ])
else:
    inst = env.Install(libdir, [ static ])

env.Depends(inst, dummy)

Return('inst')
