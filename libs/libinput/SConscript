#!/usr/bin/python
#
# libinput
#

Import ('env')

dir = env['BUILD_DIR']
target = env['TARG']
libdir = env['INSTLIBDIR']
ldflags = env['LDFLAGS']
linkmode = env['LINKMODE']
bindir = env['INSTBINDIR']

common = [ 'input.c' ]

if target == 'mvp':
    src = [ common, 'ir.c' ]
elif target == 'mg35':
    src = [ common, 'fip.c' ]
else:
    src = [ common, 'gtk.c']

inputtest = env.Program('inputtest',
                        [ 'inputtest.c' ],
                        CPPPATH = [ env['INCDIR'], env['INSTINCDIR'], ],
                        LIBS = [ 'input' ],
                        LIBPATH = [ libdir ],
                        LINKFLAGS = ldflags )

static = env.StaticLibrary('input', src,
                           CPPPATH = [env['INCDIR'], env['INSTINCDIR']],
                           LINKFLAGS = ldflags)

if linkmode == 'dynamic':
    shared = env.SharedLibrary('input', src,
                               CPPPATH = [env['INCDIR'], env['INSTINCDIR']],
                               LINKFLAGS = ldflags)
    inst = env.Install(libdir, [ static, shared ])
else:
    inst = env.Install(libdir, [ static ])

inst2 = env.Install(bindir, inputtest)
env.Depends(inputtest, inst)

Return('inst2')
