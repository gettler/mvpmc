#!/usr/bin/python
#

Import('env')

target = env['TARG']
dir = env['BUILD_DIR']

input = env.SConscript('libinput/SConscript',
		       build_dir='libinput/'+dir, duplicate=0)
gw = env.SConscript('libgw/SConscript',
		    build_dir='libgw/'+dir, duplicate=0)
av = SConscript('libav/SConscript',
		build_dir='libav/'+dir, duplicate=0)
#cmyth = SConscript('libcmyth/SConscript',
#		   build_dir='libcmyth/'+dir, duplicate=0)
#demux = SConscript('libdemux/SConscript',
#		   build_dir='libdemux/'+dir, duplicate=0)
osd = SConscript('libosd/SConscript',
		 build_dir='libosd/'+dir, duplicate=0)
#replaytv = SConscript('libreplaytv/SConscript',
#		      build_dir='libreplaytv/'+dir, duplicate=0)
#ts_demux = SConscript('libts_demux/SConscript',
#		      build_dir='libts_demux/'+dir, duplicate=0)
#vnc = SConscript('libvnc/SConscript',
#		 build_dir='libvnc/'+dir, duplicate=0)
#widget = SConscript('libwidget/SConscript',
#		    build_dir='libwidget/'+dir, duplicate=0)
refmem = SConscript('librefmem/SConscript',
		    build_dir='librefmem/'+dir, duplicate=0)

#libs = [ av, cmyth, demux, osd, replaytv, ts_demux, vnc, widget, refmem ]

if target == 'mg35':
    pt = env.SConscript('libpthread_nommu/SConscript',
                        build_dir='libpthread_nommu/'+dir, duplicate=0)
    libs = [ osd, input, gw, refmem, av, pt ]
else:
    libs = [ osd, input, gw, refmem, av ]

#if target == 'mvp':
#	tiwlan = SConscript('libtiwlan/SConscript',
#			    build_dir='libtiwlan/'+dir, duplicate=0)
#	libs.append(tiwlan)

Return('libs')
